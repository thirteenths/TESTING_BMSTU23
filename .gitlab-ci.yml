stages:
  - testing # Запуск тестов

unit-tests:
  stage: testing
  tags:
    - docker
  image: golang:1.21
  before_script:
    - go mod download && go mod verify
  script:
    - make unit-test

integration-tests:
  stage: testing
  tags:
    - docker
  image: golang:1.21
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DATABASE_HOST: docker
  before_script:
    - go mod download && go mod verify
  script:
    - make integration-test

end-to-end-tests:
  stage: testing
  tags:
    - docker
  image: golang:1.21
  services:
   - postgres:11.7
  variables:
    POSTGRES_DB: "postgres"
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "7dgvJVDJvh254aqOpfd"
    POSTGRES_HOST_AUTH_METHOD: trust
    BACKEND_POSTGRES_HOST: postgres
  before_script:
    - go mod download && go mod verify
  script:
    - make run-api &
    - make e2e-test

  bdd-tests:
    stage: testing
    tags:
      - docker
    image: golang:1.21
    services:
      - postgres:11.7
    variables:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "7dgvJVDJvh254aqOpfd"
      POSTGRES_HOST_AUTH_METHOD: trust
      BACKEND_POSTGRES_HOST: postgres
    before_script:
      - go mod download && go mod verify
    script:
      - make run-api &
      - make bdd-test